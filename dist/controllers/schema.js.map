{"version":3,"sources":["../src/controllers/schema.ts"],"names":["schemaRoute","fastify","get","request","reply","__awaiter","this","data","post","schema","headers","params","query","body","type","required","properties","email","format","username","maxLength","password","minLength","x-fastyfy-token","authorization","id","pattern","exports","default"],"mappings":"iUAEA,SAA8BA,YAAYC,G,gDACxCA,EAAQC,IAAI,IAAK,CAAOC,EAAyBC,IAAuBC,UAAAC,KAAA,KAAA,EAAA,KAAA,EAAA,YACtE,MAAO,CAAEC,KAAM,mBAAmB,CACpC,CAAC,CAAA,EAEDN,EAAQO,KACN,YACA,CACEC,OAAQ,CACNC,QAAS,GACTC,OAAQ,GACRC,MAAO,GACPC,KAAM,CACJC,KAAM,SACNC,SAAU,CAAC,WAAY,YACvBC,WAAY,CACVC,MAAO,CAAEH,KAAM,SAAUI,OAAQ,OAAO,EACxCC,SAAU,CAAEL,KAAM,SAAUM,UAAW,EAAE,EACzCC,SAAU,CAAEP,KAAM,SAAUQ,UAAW,CAAC,C,KAKhD,CAAOnB,EAAyBC,IAAuBC,UAAAC,KAAA,KAAA,EAAA,KAAA,EAAA,YACrD,MAAO,CAAEC,KAAM,UAAU,CAC3B,CAAC,CAAA,EAGHN,EAAQC,IACN,YACA,CACEO,OAAQ,CACNC,QAAS,CACPI,KAAM,SACNC,SAAU,CAAC,iBACXC,WAAY,CACVO,kBAAmB,CAAET,KAAM,QAAQ,EACnCU,cAAe,CAAEV,KAAM,QAAQ,C,GAGnCH,OAAQ,CACNG,KAAM,SACNC,SAAU,CAAC,MACXC,WAAY,CACVS,GAAI,CAAEX,KAAM,UAAWY,QAAS,YAAY,C,KAKpD,CAAOvB,EAAyBC,IAAuBC,UAAAC,KAAA,KAAA,EAAA,KAAA,EAAA,YACrD,IAAQmB,EAAYtB,EAAQQ,OAAlB,GACV,MAAO,CAAEJ,KAAMkB,CAAE,CACnB,CAAC,CAAA,CAEL,CAAC,C,wDAtDDE,QAAAC,QAAA5B","file":"schema.js","sourcesContent":["import { FastifyInstance, FastifyRequest, FastifyReply } from \"fastify\";\r\n\r\nexport default async function schemaRoute(fastify: FastifyInstance) {\r\n  fastify.get(\"/\", async (request: FastifyRequest, reply: FastifyReply) => {\r\n    return { data: \"schemaRoute ready\" };\r\n  });\r\n\r\n  fastify.post(\r\n    \"/regitser\",\r\n    {\r\n      schema: {\r\n        headers: {},\r\n        params: {},\r\n        query: {},\r\n        body: {\r\n          type: \"object\",\r\n          required: [\"username\", \"password\"],\r\n          properties: {\r\n            email: { type: \"string\", format: \"email\" },\r\n            username: { type: \"string\", maxLength: 20 },\r\n            password: { type: \"string\", minLength: 6 },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    async (request: FastifyRequest, reply: FastifyReply) => {\r\n      return { data: \"register\" };\r\n    }\r\n  );\r\n\r\n  fastify.get(\r\n    \"/info/:id\",\r\n    {\r\n      schema: {\r\n        headers: {\r\n          type: \"object\",\r\n          required: [\"authorization\"],\r\n          properties: {\r\n            \"x-fastyfy-token\": { type: \"string\" },\r\n            authorization: { type: \"string\" },\r\n          },\r\n        },\r\n        params: {\r\n          type: \"object\",\r\n          required: [\"id\"],\r\n          properties: {\r\n            id: { type: \"integer\", pattern: \"^[0-9]{4}$\" },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    async (request: FastifyRequest, reply: FastifyReply) => {\r\n      const { id }: any = request.params;\r\n      return { data: id };\r\n    }\r\n  );\r\n}\r\n"]}