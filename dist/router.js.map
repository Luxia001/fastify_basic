{"version":3,"sources":["../src/router.ts"],"names":["exports","default","router","index_1","__importDefault","require","demo_1","schema_1","db_1","upload_1","fastify","register","prefix","setErrorHandler","error","request","reply","console","status","send","message","setNotFoundHandler"],"mappings":"sdAOAA,QAAAC,QAAAC,OANA,IAAAC,QAAAC,gBAAAC,QAAA,qBAAA,CAAA,EACAC,OAAAF,gBAAAC,QAAA,oBAAA,CAAA,EACAE,SAAAH,gBAAAC,QAAA,sBAAA,CAAA,EACAG,KAAAJ,gBAAAC,QAAA,kBAAA,CAAA,EACAI,SAAAL,gBAAAC,QAAA,sBAAA,CAAA,EAEA,SAA8BH,OAAOQ,G,gDACnCA,EAAQC,SAASR,QAAAF,QAAY,CAAEW,OAAQ,GAAG,CAAE,EAC5CF,EAAQC,SAASL,OAAAL,QAAW,CAAEW,OAAQ,OAAO,CAAE,EAC/CF,EAAQC,SAASJ,SAAAN,QAAa,CAAEW,OAAQ,SAAS,CAAE,EACnDF,EAAQC,SAASH,KAAAP,QAAS,CAAEW,OAAQ,KAAK,CAAE,EAC3CF,EAAQC,SAASF,SAAAR,QAAa,CAAEW,OAAQ,SAAS,CAAE,EACnDF,EAAQG,gBACN,CAACC,EAAOC,EAAyBC,KAC/BC,QAAQH,MAAMA,CAAK,EACnBE,EACGE,OAAO,GAAG,EACVC,KAAK,CAAEL,MAAO,wBAAyBM,QAASN,EAAMM,OAAO,CAAE,CACpE,CAAC,EAEHV,EAAQW,mBAAmB,CAACN,EAAyBC,KACnDA,EAAME,OAAO,GAAG,EAAEC,KAAK,CAAEL,MAAO,WAAW,CAAE,CAC/C,CAAC,CACH,CAAC,C","file":"router.js","sourcesContent":["import { FastifyInstance, FastifyReply, FastifyRequest } from \"fastify\";\r\nimport indexRoute from \"./controllers/index\";\r\nimport demoRoute from \"./controllers/demo\";\r\nimport schemaRoute from \"./controllers/schema\";\r\nimport dbRoute from \"./controllers/db\";\r\nimport uploadRoute from \"./controllers/upload\";\r\n\r\nexport default async function router(fastify: FastifyInstance) {\r\n  fastify.register(indexRoute, { prefix: \"/\" });\r\n  fastify.register(demoRoute, { prefix: \"/demo\" });\r\n  fastify.register(schemaRoute, { prefix: \"/schema\" });\r\n  fastify.register(dbRoute, { prefix: \"/db\" });\r\n  fastify.register(uploadRoute, { prefix: \"/upload\" });\r\n  fastify.setErrorHandler(\r\n    (error, request: FastifyRequest, reply: FastifyReply) => {\r\n      console.error(error);\r\n      reply\r\n        .status(500)\r\n        .send({ error: \"Internal Server Error\", message: error.message });\r\n    }\r\n  );\r\n  fastify.setNotFoundHandler((request: FastifyRequest, reply: FastifyReply) => {\r\n    reply.status(404).send({ error: \"Not Found\" });\r\n  });\r\n}\r\n"]}